stages:
  - test
  - build
  - deploy_staging

test:2.3:
  only:
  - master
  - production
  stage: test
  image: ruby:2.3
  services:
  - mysql:latest
  - elasticsearch:latest
  variables:
    RAILS_ENV: ci
    MYSQL_DATABASE: pets
    MYSQL_ROOT_PASSWORD: root
  script:
  - bundle install
  - bundle exec rails db:create RAILS_ENV=ci
  - bundle exec rails db:create RAILS_ENV=test
  - bundle exec rails db:migrate RAILS_ENV=ci
  - bundle exec rails db:migrate RAILS_ENV=test
  - RAILS_ENV=ci bundle exec rspec

test:2.4_latest:
  only:
  - master
  - production
  stage: test
  image: ruby:latest
  services:
  - mysql:latest
  - elasticsearch:latest
  variables:
    RAILS_ENV: ci
    MYSQL_DATABASE: pets
    MYSQL_ROOT_PASSWORD: root
  script:
  - bundle install
  - bundle exec rails db:create RAILS_ENV=ci
  - bundle exec rails db:create RAILS_ENV=test
  - bundle exec rails db:migrate RAILS_ENV=ci
  - bundle exec rails db:migrate RAILS_ENV=test
  - RAILS_ENV=ci bundle exec rspec
  artifacts:
    paths:
      - coverage/

docker_image:
  only:
  - production
  stage: build
  image: docker:git
  services:
    - docker:dind
  script:
  - apk --update add --virtual build_deps build-base ruby-dev libc-dev linux-headers mariadb-dev libxml2-dev libxslt-dev
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker build . -t registry.gitlab.com/rodrigodealer/pets:0.0.1
  - docker push registry.gitlab.com/rodrigodealer/pets

staging_deploy:
  stage: deploy_staging
  image: docker:git
  services:
    - docker:dind
  script:
  - docker run -v $(pwd)/keys/id_rsa:/root/.ssh/id_rsa  -v $(pwd)/keys/id_rsa.pub:/root/.ssh/id_rsa.pub -v $(pwd):/ansible/playbooks  philm/ansible_playbook playbook.yml -i hosts
